<?xml version="1.0" encoding="UTF-8"?>

<project name="jfilenotify" default="default" basedir=".">
    <description>Builds, tests, and runs the project jfilenotify.</description>
		
		<!-- imports netbeans specific build file -->
    <import file="nbproject/build-impl.xml"/>
		
		<!-- overwrites the target to compile native code -->
		<target name="-post-compile">
				<!-- imports needed variables to build -->
				<property file="buildoptions.properties"/>
	
				<!-- tests if inotify is enabled to be build and call its build target -->
				<condition property="inotifyEnabled">
						<equals arg1="${inotify.build}" arg2="true"/>
				</condition>
				<antcall target="build-inotify"/>
				
		</target>
		
		<!-- builds the shared library for inotify -->
		<target name="build-inotify" if="inotifyEnabled">
				<javah classpath="${build.classes.dir}" class="de.jtdev.jfilenotify.inotify.INotifyService" outputfile="${src.dir}/inotify/jfilenotify.h"/>	
				<!-- TODO this calls gcc directly (is there no better solution?) -->
				<exec executable="gcc">
						<arg value="-c"/>
						<arg value="-I${inotify.java.include.dir}"/>
						<arg value="-I${inotify.java.include.dir}/linux"/>
						<arg value="-o"/>
						<arg value="${src.dir}/inotify/jfilenotify.o"/>
						<arg value="-fPIC"/>
						<arg value="${src.dir}/inotify/jfilenotify.c"/>
				</exec>
				<mkdir dir="${dist.dir}"/>
				<exec executable="gcc">
						<arg value="-shared"/>
						<arg value="-o"/>
						<arg value="${dist.dir}/libjfilenotify.so"/>
						<arg value="${src.dir}/inotify/jfilenotify.o"/>
				</exec>
				<delete file="${src.dir}/inotify/jfilenotify.o"/>
		</target>
		
</project>
