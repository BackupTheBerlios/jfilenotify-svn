/*
 * Listenertest.java
 *
 * Created on 28. Mai 2007, 13:46
 */

package test;

import de.jtdev.jfilenotify.FileNotifyEvent;
import de.jtdev.jfilenotify.FileNotifyException;
import de.jtdev.jfilenotify.FileNotifyListener;
import de.jtdev.jfilenotify.FileNotifyService;
import de.jtdev.jfilenotify.FileNotifyServiceFactory;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.SwingUtilities;

/**
 *
 * @author  tbn
 */
public class Listenertest extends javax.swing.JFrame {
	
	FileNotifyService service;
	
	/** Creates new form Listenertest */
	public Listenertest() {
		try {
			service = FileNotifyServiceFactory.createNotificationService();
		} catch (FileNotifyException ex) {
			ex.printStackTrace();
			System.exit(-1);
		}
		initComponents();
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        filenameField = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        accessedOption = new javax.swing.JCheckBox();
        modifiedOption = new javax.swing.JCheckBox();
        metadataChangedOption = new javax.swing.JCheckBox();
        closedWritableOption = new javax.swing.JCheckBox();
        closedNotWritableOption = new javax.swing.JCheckBox();
        openedOption = new javax.swing.JCheckBox();
        movedFromOption = new javax.swing.JCheckBox();
        movedToOption = new javax.swing.JCheckBox();
        createdOption = new javax.swing.JCheckBox();
        deletedOption = new javax.swing.JCheckBox();
        selfDeletedOption = new javax.swing.JCheckBox();
        selfMovedOption = new javax.swing.JCheckBox();
        onlyDirectoryOption = new javax.swing.JCheckBox();
        dontFollowOption = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listenerList = new javax.swing.JList();
        removeButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        eventList = new javax.swing.JList();
        clearButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        jLabel2.setText("Filename:");

        filenameField.setText("/home/tbn/Desktop/test");

        jButton2.setText("...");
        jButton2.setEnabled(false);

        jLabel1.setText("Mask options:");

        accessedOption.setText("0x00000002 ACCESSED");
        accessedOption.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        accessedOption.setMargin(new java.awt.Insets(0, 0, 0, 0));

        modifiedOption.setText("0x00000004 MODIFIED");
        modifiedOption.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        modifiedOption.setMargin(new java.awt.Insets(0, 0, 0, 0));

        metadataChangedOption.setText("0x00000020 ATTRIBUTES_CHANGED");
        metadataChangedOption.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        metadataChangedOption.setMargin(new java.awt.Insets(0, 0, 0, 0));

        closedWritableOption.setText("0x00000008 CLOSED_WRITEABLE");
        closedWritableOption.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        closedWritableOption.setMargin(new java.awt.Insets(0, 0, 0, 0));

        closedNotWritableOption.setText("0x00000010 CLOSED_NOT_WRITEABLE");
        closedNotWritableOption.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        closedNotWritableOption.setMargin(new java.awt.Insets(0, 0, 0, 0));

        openedOption.setText("0x00000001 OPENED");
        openedOption.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        openedOption.setMargin(new java.awt.Insets(0, 0, 0, 0));

        movedFromOption.setText("0x00000400 MOVED_FROM");
        movedFromOption.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        movedFromOption.setMargin(new java.awt.Insets(0, 0, 0, 0));

        movedToOption.setText("0x00000800 MOVED_TO");
        movedToOption.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        movedToOption.setMargin(new java.awt.Insets(0, 0, 0, 0));

        createdOption.setText("0x00000100 SUBFILE_CREATED");
        createdOption.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        createdOption.setMargin(new java.awt.Insets(0, 0, 0, 0));

        deletedOption.setText("0x00000200 SUBFILE_DELETED");
        deletedOption.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        deletedOption.setMargin(new java.awt.Insets(0, 0, 0, 0));

        selfDeletedOption.setText("0x00001000 SELF_DELETED");
        selfDeletedOption.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        selfDeletedOption.setMargin(new java.awt.Insets(0, 0, 0, 0));

        selfMovedOption.setText("0x00002000 SELF_MOVED");
        selfMovedOption.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        selfMovedOption.setMargin(new java.awt.Insets(0, 0, 0, 0));

        onlyDirectoryOption.setText("0x00010000 ONLY_DIRECTORY");
        onlyDirectoryOption.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        onlyDirectoryOption.setMargin(new java.awt.Insets(0, 0, 0, 0));

        dontFollowOption.setText("0x00020000 DONT_FOLLOW");
        dontFollowOption.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        dontFollowOption.setMargin(new java.awt.Insets(0, 0, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(filenameField, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2))
                            .addComponent(jLabel1)
                            .addComponent(closedNotWritableOption)
                            .addComponent(openedOption)
                            .addComponent(accessedOption)
                            .addComponent(modifiedOption)
                            .addComponent(closedWritableOption)
                            .addComponent(metadataChangedOption))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(createdOption)
                        .addContainerGap(167, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(deletedOption)
                        .addContainerGap(169, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(movedFromOption)
                        .addContainerGap(192, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(movedToOption)
                        .addContainerGap(210, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(selfDeletedOption)
                        .addContainerGap(190, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(selfMovedOption)
                        .addContainerGap(200, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(onlyDirectoryOption)
                        .addContainerGap(168, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(dontFollowOption)
                        .addContainerGap(185, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(filenameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(openedOption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(accessedOption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(modifiedOption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closedWritableOption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closedNotWritableOption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(metadataChangedOption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(createdOption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deletedOption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(movedFromOption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(movedToOption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selfDeletedOption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selfMovedOption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(onlyDirectoryOption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dontFollowOption)
                .addContainerGap(159, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(listenerList);

        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(eventList);

        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(addButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addComponent(clearButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeButton)
                    .addComponent(addButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clearButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
		ListModel model;
		DefaultListModel dmodel;
				
		model = eventList.getModel();
		if (model instanceof DefaultListModel) {
			dmodel = (DefaultListModel) model;
			dmodel.clear();
		}
	}//GEN-LAST:event_clearButtonActionPerformed
	
	private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
		ListModel model = listenerList.getModel();
		if (model instanceof DefaultListModel) {
			DefaultListModel dmodel = (DefaultListModel) model;
			int index = listenerList.getSelectedIndex();
			if (index >= 0) {
				FileNotifyListener listener = (FileNotifyListener) dmodel.remove(index);
				try {
					if (!service.removeFileNotifyListener(listener)) {
						JOptionPane.showMessageDialog(this, "Listener did not exist!!");
					}
				} catch (FileNotifyException ex) {
					JOptionPane.showMessageDialog(this, ex.getMessage());
				}
			}
		}
	}//GEN-LAST:event_removeButtonActionPerformed
	
	private static int num = 1;
	
	private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
		String filename = filenameField.getText();
		int mask = 0;
		if (openedOption.isSelected())            mask |= FileNotifyEvent.OPENED;
		if (accessedOption.isSelected())          mask |= FileNotifyEvent.ACCESSED;
		if (modifiedOption.isSelected())          mask |= FileNotifyEvent.MODIFIED;
		if (closedWritableOption.isSelected())    mask |= FileNotifyEvent.CLOSED_WRITEABLE;
		if (closedNotWritableOption.isSelected()) mask |= FileNotifyEvent.CLOSED_NOT_WRITEABLE;
		if (metadataChangedOption.isSelected())   mask |= FileNotifyEvent.ATTRIBUTES_CHANGED;

		if (createdOption.isSelected())     mask |= FileNotifyEvent.SUBFILE_CREATED;
		if (deletedOption.isSelected())     mask |= FileNotifyEvent.SUBFILE_DELETED;		
		if (movedFromOption.isSelected())   mask |= FileNotifyEvent.MOVED_FROM;
		if (movedToOption.isSelected())     mask |= FileNotifyEvent.MOVED_TO;
		if (selfDeletedOption.isSelected()) mask |= FileNotifyEvent.SELF_DELETED;
		if (selfMovedOption.isSelected())   mask |= FileNotifyEvent.SELF_MOVED;
		
		if (onlyDirectoryOption.isSelected()) mask |= FileNotifyEvent.ONLY_DIRECTORY;
//		if (dontFollowOption.isSelected())    mask |= FileNotifyEvent.DONT_FOLLOW;
		
		final FileNotifyListener listener = new FileNotifyListener(filename, mask) {
			
			String name = "Listener " + num++;
			
			public void notificationRecieved(final FileNotifyEvent evt) {
				SwingUtilities.invokeLater(new Runnable() {
					public void run() {
					//	String listenerName = name;
						
						String eventString = "event recieved ("+name+"): mask="+Integer.toHexString(evt.getChangeMask())+" fileName="+evt.getChangedFileName();
						
						//int mask = evt.getMask();
						//if ((mask & FileNotifyConstants.OPENED) != 0x00000000) eventString = "File Opened";
						//System.out.println("event recived: mask="+Integer.toHexString(evt.getMask())+" fileName="+evt.getFileName());
						ListModel model = eventList.getModel();
						DefaultListModel dmodel;
						if (!(model instanceof DefaultListModel)) {
							dmodel = new DefaultListModel();
							model = dmodel;
							eventList.setModel(dmodel);
						}
						dmodel = (DefaultListModel) model;
						dmodel.addElement(eventString);
					}
				});
			}
			
			public void discarded(final FileNotifyEvent evt) {
				
				final FileNotifyListener thisListener = this;
				
				SwingUtilities.invokeLater(new Runnable() {
					public void run() {
						ListModel model;
						DefaultListModel dmodel;

						model = listenerList.getModel();
						if (model instanceof DefaultListModel) {
							dmodel = (DefaultListModel) model;
							dmodel.removeElement(thisListener);
						}

						String eventString = name + " discarded: mask="+Integer.toHexString(evt.getChangeMask())+" fileName="+evt.getChangedFileName();
						model = eventList.getModel();
						if (!(model instanceof DefaultListModel)) {
							dmodel = new DefaultListModel();
							model = dmodel;
							eventList.setModel(dmodel);
						}
						dmodel = (DefaultListModel) model;
						dmodel.addElement(eventString);
					}
				});
				
			}
			
			public String toString() {
				return name + ": fileName="+getFileName()+" mask="+Integer.toHexString(getMask());
			}
			
		};
		
		final JFrame thisFrame = this;
		
		SwingUtilities.invokeLater(new Runnable() {
			public void run() {
				try {
					service.addFileNotifyListener(listener);
					ListModel model = listenerList.getModel();
					if (!(model instanceof DefaultListModel)) {
						model = new DefaultListModel();
						listenerList.setModel(model);
					}
					DefaultListModel dmodel = (DefaultListModel) model;
					dmodel.addElement(listener);
				} catch (FileNotifyException ex) {
					JOptionPane.showMessageDialog(thisFrame, ex.getMessage());
				}
			}
		});
		
	}//GEN-LAST:event_addButtonActionPerformed
	
	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new Listenertest().setVisible(true);
			}
		});
	}
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox accessedOption;
    private javax.swing.JButton addButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JCheckBox closedNotWritableOption;
    private javax.swing.JCheckBox closedWritableOption;
    private javax.swing.JCheckBox createdOption;
    private javax.swing.JCheckBox deletedOption;
    private javax.swing.JCheckBox dontFollowOption;
    private javax.swing.JList eventList;
    private javax.swing.JTextField filenameField;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JList listenerList;
    private javax.swing.JCheckBox metadataChangedOption;
    private javax.swing.JCheckBox modifiedOption;
    private javax.swing.JCheckBox movedFromOption;
    private javax.swing.JCheckBox movedToOption;
    private javax.swing.JCheckBox onlyDirectoryOption;
    private javax.swing.JCheckBox openedOption;
    private javax.swing.JButton removeButton;
    private javax.swing.JCheckBox selfDeletedOption;
    private javax.swing.JCheckBox selfMovedOption;
    // End of variables declaration//GEN-END:variables
	
}
